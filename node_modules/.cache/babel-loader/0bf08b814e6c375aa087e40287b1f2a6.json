{"ast":null,"code":"var _jsxFileName = \"/opt/Job-portal-react/src/components/JobPortal/index.jsx\";\nimport React, { Component } from \"react\";\nimport cloneDeep from \"clone-deep\";\nimport { Row, Col, Input, Checkbox } from \"antd\";\nimport { jobList, jobTypeListing } from \"../../utils/mockData\";\nimport JobListing from \"../JobListing\";\nimport \"./style.css\";\nconst {\n  Search\n} = Input;\nexport default class JobPortal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      jobListing: [],\n      textFilter: \"\",\n      jobType: []\n    };\n\n    this.onTypeChange = checkedValues => {\n      this.setState({\n        jobType: checkedValues\n      });\n    };\n\n    this.onSearch = value => {\n      this.setState({\n        textFilter: value\n      });\n    };\n\n    this.getFilterJobs = () => {\n      const {\n        jobListing,\n        textFilter,\n        jobType\n      } = this.state;\n      let clonedList = cloneDeep(jobListing);\n\n      if (textFilter) {\n        clonedList = clonedList.filter(job => job.title.toLowerCase().includes(textFilter.toLowerCase()));\n      }\n\n      if (jobType.length) {\n        clonedList = clonedList.filter(job => jobType.includes(job.type));\n      }\n\n      return clonedList;\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      jobListing: jobList\n    });\n  }\n\n  render() {\n    const filterdJobs = this.getFilterJobs();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      align: \"middle\",\n      justify: \"center\",\n      className: \"search-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 7,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Search, {\n      placeholder: \"input search text\",\n      enterButton: \"Search\",\n      size: \"large\",\n      onSearch: this.onSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      span: 7,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox.Group, {\n      options: jobTypeListing,\n      onChange: this.onTypeChange,\n      className: \"job-type-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 14,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(JobListing, {\n      jobs: filterdJobs,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/opt/Job-portal-react/src/components/JobPortal/index.jsx"],"names":["React","Component","cloneDeep","Row","Col","Input","Checkbox","jobList","jobTypeListing","JobListing","Search","JobPortal","state","jobListing","textFilter","jobType","onTypeChange","checkedValues","setState","onSearch","value","getFilterJobs","clonedList","filter","job","title","toLowerCase","includes","length","type","componentDidMount","render","filterdJobs"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport cloneDeep from \"clone-deep\";\nimport { Row, Col, Input, Checkbox } from \"antd\";\nimport { jobList, jobTypeListing } from \"../../utils/mockData\";\nimport JobListing from \"../JobListing\";\nimport \"./style.css\";\n\nconst { Search } = Input;\n\nexport default class JobPortal extends Component {\n  state = {\n    jobListing: [],\n    textFilter: \"\",\n    jobType: [],\n  };\n\n  componentDidMount() {\n    this.setState({ jobListing: jobList });\n  }\n\n  onTypeChange = (checkedValues) => {\n    this.setState({\n      jobType: checkedValues,\n    });\n  };\n\n  onSearch = (value) => {\n    this.setState({ textFilter: value });\n  };\n\n  getFilterJobs = () => {\n    const { jobListing, textFilter, jobType } = this.state;\n    let clonedList = cloneDeep(jobListing);\n    if (textFilter) {\n      clonedList = clonedList.filter((job) =>\n        job.title.toLowerCase().includes(textFilter.toLowerCase())\n      );\n    }\n    if (jobType.length) {\n      clonedList = clonedList.filter((job) =>\n        jobType.includes(job.type)\n      );\n    }\n    return clonedList;\n  };\n\n  render() {\n    const filterdJobs = this.getFilterJobs();\n    return (\n      <div>\n        <Row align=\"middle\" justify=\"center\" className=\"search-container\">\n          <Col span={7}>\n            <Search\n              placeholder=\"input search text\"\n              enterButton=\"Search\"\n              size=\"large\"\n              onSearch={this.onSearch}\n            />\n          </Col>\n          <Col span={7}>\n            <Checkbox.Group\n              options={jobTypeListing}\n              onChange={this.onTypeChange}\n              className=\"job-type-container\"\n            />\n          </Col>\n        </Row>\n        <Row align=\"center\">\n          <Col span={14}>\n            <JobListing jobs={filterdJobs} />\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}